x-airflow-common:
  &airflow-common
  image: apache/airflow:2.7.2
  env_file:
    - airflow/.env-dev
  volumes:
    - ./airflow/dags:/usr/local/airflow/dags
    - ./airflow/logs:/usr/local/airflow/logs
    - ./airflow/config:/usr/local/airflow/config
    - ./airflow/plugins:/usr/local/airflow/plugins
  depends_on:
    airflow-postgres:
      condition: service_healthy
  logging:
    options:
      max-size: 10m
      max-file: "3"
services:
  mongo-origin:
    build: ./mongo
    container_name: mongo-origin
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
      MONGO_INITDB_DATABASE: origin
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
      - ./mongo/data:/sample_data
      - ./mongo/init.sh:/docker-entrypoint-initdb.d/init.sh
  postgres-destination:
    image: postgres:latest
    container_name: postgres-destination
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: destination
      PGPORT: 5433
    ports:
      - 5433:5433
    volumes:
      - postgres-data:/var/lib/postgresql/data
  airflow-postgres:
    image: postgres:13
    env_file:
      airflow/.env-dev
    logging:
      options:
        max-size: 10m
        max-file: "3"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
  airflow-webserver:
    <<: *airflow-common
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    ports:
      - "8793:8793"
volumes:
  postgres-data:
  mongo-data:
